{"version":3,"sources":["components/LogIn.js","components/Register.js","components/ModalAddButton.js","components/ModalAccount.js","components/Dashboard.js","App.js","index.js"],"names":["LogIn","_ref","authorization","_useState","useState","_useState2","Object","slicedToArray","username","setUsername","_useState3","_useState4","password","setPassword","react_default","a","createElement","className","onSubmit","event","preventDefault","type","required","value","onChange","e","target","react_router_dom","to","Register","registerNewUser","name","setName","_useState5","_useState6","history","useHistory","push","minLength","ModalAddButton","size","addNewAccount","open","setOpen","modalSize","setModalSize","accountName","setAccountName","_useState7","_useState8","_useState9","_useState10","_useState11","_useState12","setType","close","Modal","onClose","trigger","Button","onClick","Header","Content","image","Description","newAccount","id","Date","getTime","placeholder","positive","content","ModalAccount","modalAccountValue","setModalAccountValue","currentAccount","deleteAccount","color","Icon","Dashboard","currentUserId","users","setCurrentAccount","currentUser","find","user","components_ModalAddButton","accounts","map","acc","index","handleRowClick","padStart","length","components_ModalAccount","App","JSON","parse","localStorage","getItem","setUsers","setCurrentUserId","useEffect","setItem","stringify","src","alt","react_router","path","exact","components_LogIn","currentU","undefined","components_Register","newUsers","concat","toConsumableArray","components_Dashboard","currUserIndex","indexOf","filter","objectSpread2","accountId","ReactDOM","render","src_App","document","getElementById"],"mappings":"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","file":"static/js/main.495e9fd9.chunk.js","sourcesContent":["import React, { useState } from 'react';\nimport { Link } from 'react-router-dom';\nimport PropTypes from 'prop-types';\n\nconst LogIn = ({ authorization }) => {\n  const [username, setUsername] = useState('');\n  const [password, setPassword] = useState('');\n\n  const handleLofInSubmit = (event) => {\n    event.preventDefault();\n    authorization(username, password);\n  };\n\n  return (\n    <div className=\"login\">\n      <h2 className=\"login__header\">Log In</h2>\n      <form\n        className=\"pure-form pure-form-stacked\"\n        onSubmit={handleLofInSubmit}\n      >\n        <label>\n          Username\n          <input\n            type=\"text\"\n            required\n            value={username}\n            onChange={e => setUsername(e.target.value)}\n          />\n        </label>\n        <label>\n          Password\n          <input\n            type=\"password\"\n            required\n            value={password}\n            onChange={e => setPassword(e.target.value)}\n          />\n        </label>\n        <div className=\"login__button-and-link\">\n          <button\n            type=\"submit\"\n            className=\"pure-button pure-button-primary login__button\"\n          >\n            Log in\n          </button>\n          <Link to=\"/register\" className=\"login__link\">Register</Link>\n        </div>\n      </form>\n    </div>\n  );\n};\n\nLogIn.propTypes = {\n  authorization: PropTypes.func.isRequired,\n};\n\nexport default LogIn;\n","import React, { useState } from 'react';\nimport { Link, useHistory } from 'react-router-dom';\nimport PropTypes from 'prop-types';\n\nconst Register = ({ registerNewUser }) => {\n  const [name, setName] = useState('');\n  const [username, setUsername] = useState('');\n  const [password, setPassword] = useState('');\n  const history = useHistory();\n\n  const handleSubmitRegister = (event) => {\n    event.preventDefault();\n    registerNewUser(name, username, password);\n    setName('');\n    setUsername('');\n    setPassword('');\n    history.push('/');\n  };\n\n  return (\n    <div className=\"register\">\n      <h2 className=\"register__header\">Register</h2>\n      <form\n        className=\"pure-form pure-form-stacked\"\n        onSubmit={handleSubmitRegister}\n      >\n        <lable>\n          Name\n          <input\n            type=\"text\"\n            required\n            minLength={1}\n            value={name}\n            onChange={e => setName(e.target.value)}\n          />\n        </lable>\n        <lable>\n          Username\n          <input\n            type=\"text\"\n            required\n            minLength={1}\n            value={username}\n            onChange={e => setUsername(e.target.value)}\n          />\n        </lable>\n        <label>\n          Password\n          <input\n            type=\"password\"\n            required\n            minLength={8}\n            value={password}\n            onChange={e => setPassword(e.target.value)}\n          />\n        </label>\n        <div className=\"register__button-and-link\">\n          <button\n            type=\"submit\"\n            className=\"pure-button pure-button-primary register__button\"\n          >\n            Register\n          </button>\n          <Link to=\"/\" className=\"register__link\">Log in</Link>\n        </div>\n      </form>\n    </div>\n  );\n};\n\nRegister.propTypes = {\n  registerNewUser: PropTypes.func.isRequired,\n};\n\nexport default Register;\n","import React, { useState } from 'react';\nimport { Button, Modal } from 'semantic-ui-react';\nimport PropTypes from 'prop-types';\n\nconst ModalAddButton = ({ addNewAccount }) => {\n  const [open, setOpen] = useState(false);\n  const [modalSize, setModalSize] = useState('');\n  const [accountName, setAccountName] = useState('');\n  const [username, setUsername] = useState('');\n  const [password, setPassword] = useState('');\n  const [type, setType] = useState('Account');\n\n  const show = size => () => {\n    setOpen(true);\n    setModalSize(size);\n  };\n\n  const close = () => setOpen(false);\n\n  const handleAddClick = () => {\n    close();\n    const newAccount = {\n      id: new Date().getTime(),\n      name: accountName,\n      username,\n      password,\n      type,\n    };\n\n    setAccountName('');\n    setUsername('');\n    setPassword('');\n    setType('Account');\n    addNewAccount(newAccount);\n  };\n\n  return (\n    <Modal\n      size={modalSize}\n      open={open}\n      onClose={close}\n      trigger={<Button onClick={show('mini')}>Add account</Button>}\n    >\n      <Modal.Header>Add account</Modal.Header>\n      <Modal.Content image>\n        <Modal.Description>\n          <form\n            onSubmit={handleAddClick}\n            className=\"pure-form pure-form-stacked\"\n          >\n            <input\n              type=\"text\"\n              placeholder=\"Account name\"\n              value={accountName}\n              onChange={e => setAccountName(e.target.value)}\n            />\n            <input\n              type=\"text\"\n              placeholder=\"Username\"\n              value={username}\n              onChange={e => setUsername(e.target.value)}\n            />\n            <input\n              type=\"text\"\n              placeholder=\"Password\"\n              value={password}\n              onChange={e => setPassword(e.target.value)}\n            />\n            <select value={type} onChange={e => setType(e.target.value)}>\n              <option>Account</option>\n              <option>Email</option>\n              <option>Device</option>\n              <option>Server</option>\n            </select>\n            <Button\n              positive\n              content=\"Add\"\n              type=\"submit\"\n            />\n          </form>\n        </Modal.Description>\n      </Modal.Content>\n    </Modal>\n  );\n};\n\nModalAddButton.propTypes = {\n  addNewAccount: PropTypes.func.isRequired,\n};\n\nexport default ModalAddButton;\n","import React from 'react';\nimport { Button, Modal, Icon } from 'semantic-ui-react';\nimport PropTypes from 'prop-types';\n\nconst ModalAccount = ({\n  modalAccountValue,\n  setModalAccountValue,\n  currentAccount,\n  deleteAccount,\n}) => {\n  const handleDeleteClick = () => {\n    setModalAccountValue(false);\n    deleteAccount(currentAccount.id);\n  };\n\n  return (\n    <Modal\n      open={modalAccountValue}\n      onClose={() => setModalAccountValue(false)}\n      size=\"mini\"\n    >\n      <Modal.Header>Account info</Modal.Header>\n      <Modal.Content image>\n        <Modal.Description>\n          <p>\n            Account name:\n            {' '}\n            <strong>{currentAccount.name}</strong>\n          </p>\n          <p>\n            Username:\n            {' '}\n            <strong>{currentAccount.username}</strong>\n          </p>\n          <p>\n            Password:\n            {' '}\n            <strong>{currentAccount.password}</strong>\n          </p>\n          <p>\n            Type:\n            {' '}\n            <strong>{currentAccount.type}</strong>\n          </p>\n          <Button\n            color=\"green\"\n            onClick={() => setModalAccountValue(false)}\n          >\n            Close\n          </Button>\n          <Button color=\"red\" onClick={handleDeleteClick}>\n            <Icon name=\"remove\" />\n            Delete\n          </Button>\n        </Modal.Description>\n      </Modal.Content>\n    </Modal>\n  );\n};\n\nModalAccount.propTypes = {\n  modalAccountValue: PropTypes.bool.isRequired,\n  setModalAccountValue: PropTypes.func.isRequired,\n  currentAccount: PropTypes.shape().isRequired,\n  deleteAccount: PropTypes.func.isRequired,\n};\n\nexport default ModalAccount;\n","import React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport ModalAddButton from './ModalAddButton';\nimport ModalAccount from './ModalAccount';\n\nconst Dashboard = ({ currentUserId, users, addNewAccount, deleteAccount }) => {\n  const [modalAccountValue, setModalAccountValue] = useState(false);\n  const [currentAccount, setCurrentAccount] = useState({});\n  const currentUser = users.find(user => user.id === currentUserId);\n\n  const handleRowClick = (index) => {\n    setModalAccountValue(true);\n    setCurrentAccount(currentUser.accounts[index]);\n  };\n\n  return currentUserId === -1\n    ? (\n      <h2>Please, log in</h2>\n    )\n    : (\n      <section className=\"dashboard\">\n        <h2 className=\"dashboard__header\">\n          Hello,\n          {' '}\n          {currentUser.name}\n          !\n        </h2>\n        <ModalAddButton addNewAccount={addNewAccount} />\n        <table className=\"pure-table dashboard__table\">\n          <thead>\n            <tr>\n              <th>Account name</th>\n              <th>Username</th>\n              <th>Password</th>\n              <th>Type</th>\n            </tr>\n          </thead>\n          <tbody>\n            {currentUser.accounts.map((acc, index) => (\n              <tr\n                onClick={() => handleRowClick(index)}\n                className=\"dashboard__row\"\n              >\n                <td>{acc.name}</td>\n                <td>{acc.username}</td>\n                <td>{''.padStart(acc.password.length, '*')}</td>\n                <td>{acc.type}</td>\n              </tr>\n            ))}\n          </tbody>\n        </table>\n        <ModalAccount\n          modalAccountValue={modalAccountValue}\n          setModalAccountValue={setModalAccountValue}\n          currentAccount={currentAccount}\n          deleteAccount={deleteAccount}\n        />\n      </section>\n    );\n};\n\nDashboard.propTypes = {\n  currentUserId: PropTypes.number.isRequired,\n  users: PropTypes.shape().isRequired,\n  addNewAccount: PropTypes.func.isRequired,\n  deleteAccount: PropTypes.func.isRequired,\n};\n\nexport default Dashboard;\n","import React, { useState, useEffect } from 'react';\nimport { Switch, Route, useHistory, Link } from 'react-router-dom';\nimport './App.scss';\nimport LogIn from './components/LogIn';\nimport Register from './components/Register';\nimport Dashboard from './components/Dashboard';\n\nfunction App() {\n  const history = useHistory();\n  const [users, setUsers] = useState(\n    JSON.parse(localStorage.getItem('users')) || [],\n  );\n  const [currentUserId, setCurrentUserId] = useState(\n    JSON.parse(localStorage.getItem('currentUserId')) || -1,\n  );\n\n  useEffect(() => localStorage.setItem('users', JSON.stringify(users)));\n  useEffect(() => localStorage.setItem(\n    'currentUserId', JSON.stringify(currentUserId)\n  ));\n\n  const registerNewUser = (name, username, password) => {\n    const newUsers = [\n      ...users, {\n        id: new Date().getTime(),\n        name,\n        username,\n        password,\n        accounts: [],\n      }];\n\n    setUsers(newUsers);\n  };\n\n  const authorization = (username, password) => {\n    const currentU = users.find(\n      user => user.username === username && user.password === password\n    );\n\n    if (currentU !== undefined) {\n      setCurrentUserId(currentU.id);\n      history.push('/dashboard');\n    }\n  };\n\n  const addNewAccount = (newAccount) => {\n    const currUserIndex = users.indexOf(\n      users.find(user => user.id === currentUserId)\n    );\n\n    setUsers([\n      ...users.filter(user => user.id !== currentUserId),\n      users[currUserIndex] = {\n        ...users[currUserIndex],\n        accounts: [\n          ...users[currUserIndex].accounts,\n          newAccount,\n        ],\n      },\n    ]);\n  };\n\n  const deleteAccount = (accountId) => {\n    const currUserIndex = users.indexOf(\n      users.find(user => user.id === currentUserId)\n    );\n\n    setUsers([\n      ...users.filter(user => user.id !== currentUserId),\n      users[currUserIndex] = {\n        ...users[currUserIndex],\n        accounts: [\n          ...users[currUserIndex].accounts.filter(acc => acc.id !== accountId),\n        ],\n      },\n    ]);\n  };\n\n  return (\n    <div className=\"page\">\n      <h1 className=\"page__header\">******** manager</h1>\n      <img src=\"./images/favicon_key.png\" className=\"page__img\" alt=\"key\" />\n      <nav className=\"page__nav navigation\">\n        <ul className=\"navigation__list\">\n          <li className=\"navigation__item\">\n            <Link to=\"/\" className=\"navigation__link\">Log in</Link>\n          </li>\n          <li className=\"navigation__item\">\n            <Link to=\"/register\" className=\"navigation__link\">Register</Link>\n          </li>\n          <li className=\"navigation__item\">\n            <Link to=\"/dashboard\" className=\"navigation__link\">Dashboard</Link>\n          </li>\n          <li className=\"navigation__item\">\n            <Link\n              to=\"/\"\n              onClick={() => setCurrentUserId(-1)}\n              className=\"navigation__link\"\n            >\n              Log out\n            </Link>\n          </li>\n        </ul>\n      </nav>\n      <Switch>\n        <Route path=\"/\" exact>\n          <LogIn authorization={authorization} />\n        </Route>\n        <Route path=\"/register\" exact>\n          <Register registerNewUser={registerNewUser} />\n        </Route>\n        <Route path=\"/dashboard\">\n          <Dashboard\n            currentUserId={currentUserId}\n            users={users}\n            addNewAccount={addNewAccount}\n            deleteAccount={deleteAccount}\n          />\n        </Route>\n      </Switch>\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { HashRouter } from 'react-router-dom';\nimport App from './App';\nimport './styles/main.scss';\n\nReactDOM.render(\n  <HashRouter>\n    <App />\n  </HashRouter>\n  ,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}